########FMT PAPER SUPP FIGURE 1A-C#####

setwd("")

library(ggplot2)
library(ggpubr)
library(ggfortify)
library(dplyr)
library(vegan)
library(tidyverse)

###############nonpariel coverage##################

table <- read.csv("./npo_summary.csv", header=TRUE)

a <- ggplot(table, aes(x=Study, y=C)) +
  scale_x_discrete(limits=c("KCD", "ROO", "RGN", "FDX", "PRE")) +
  ylab("Nonpareil Coverage") +
  geom_boxplot() +
  theme_minimal(base_size = 16) 
a

###############nonpariel alpha diversity##################

table <- read.csv("./npo_summary.csv", header=TRUE)
table$Sample.type <- factor(table$Sample.type, levels=c("Donor",
                                                        "Control-Baseline",
                                                        "Control-Follow up",
                                                        "Recipient-Baseline",
                                                        "Recipient-Post FMT"))
b_comparisons <- list(c("Control-Baseline", "Control-Follow up"), 
                      c("Recipient-Baseline", "Recipient-Post FMT"),
                      c("Donor", "Control-Baseline"), 
                      c("Donor", "Recipient-Baseline")
                      )

b <- ggplot(table, aes(x=Sample.type, y=diversity, fill=Type)) +
  scale_x_discrete(limits=c("Donor", "Control-Baseline", "Control-Follow up", "Recipient-Baseline",  "Recipient-Post FMT")) +
  geom_boxplot() +
  theme_minimal(base_size = 16) +
  theme(axis.text.x=element_text(angle = 90)) +
  stat_compare_means(comparisons = b_comparisons, paired=FALSE) +
  ylab("Diversity") +
  xlab("Sample type")
b

str(b_comparisons)

abun_aov <- aov(table$diversity~table$Sample.type)
summary(abun_aov)
TukeyHSD(abun_aov,ordered = FALSE, conf.level = 0.95)


##############vegan NMDS####################

table <- read.csv("./all_mag_abundance_mat.tsv", header=TRUE, sep='\t', row.names="Sample")
table <- table[, -which(names(table) == "Target_Type")]
mat <- data.matrix(table) 

metadata <- read.csv("./all_metadata.txt", header=TRUE, sep='\t')
metadata$Patient_ID <- as.factor(metadata$Patient_ID)
metadata$Study <- as.factor(metadata$Study)
metadata$Target <- as.factor(metadata$Target)
metadata$Type <- as.factor(metadata$Type)
metadata$Target_Type <- as.factor(metadata$Target_Type)

set.seed(1)
nmds <- metaMDS(mat, k=2, try=100, trymax=100)

for_plot <- nmds$points %>%
  as_tibble(rownames = "Sample") %>%
  inner_join(., metadata, by="Sample")

plot_sub <- filter(for_plot, 
                   Target_Type == "ARO-Follow up" |
                     Target_Type == "ARO-Baseline" |
                     Target_Type == "ARO-Post FMT" |
                     Target_Type == "CDI-Follow up" |
                     Target_Type == "CDI-Baseline" |
                     Target_Type == "CDI-Post FMT")


c <- ggplot(for_plot, aes(x=MDS1, y=MDS2, color=Target_Type, shape=Target)) +
  geom_point(size=2.5) +
  scale_color_manual(values=c("#a6e1fa", "#0e6ba8", "#0a2472", 
                              "#a7c957", "#6a994e", "#386641",
                              "#000814")) +
  scale_shape_manual(values=c(16,17,4)) +
  theme_minimal(base_size=16) +
  stat_ellipse(data=plot_sub, aes(x=MDS1, y=MDS2, group = interaction(Target_Type, Target), color=Target_Type, fill=Target_Type), 
               geom = "polygon",
               alpha=0.1, show.legend=FALSE) +
  scale_fill_manual(values=c("#a6e1fa", "#0e6ba8", "#0a2472", 
                              "#a7c957", "#6a994e", "#386641"))+
  xlab("NMDS1") +
  ylab("NMDS2")
c

bray_dist <- vegdist(mat, method="bray", na.rm=FALSE)

adonis2(bray_dist~metadata$Study, 
        strata=metadata$Patient_ID,
        by="terms")

adonis2(bray_dist~metadata$Target_Type, 
        strata=metadata$Patient_ID,
        by="terms")

adonis2(bray_dist~metadata$Patient_ID, 
        strata=metadata$Patient_ID,
        by="terms")

##############################combined plot##################################

upper <- ggarrange(a, b, 
                   labels = c("A", "B"),
                   ncol = 2, nrow = 1)
upper

pdf(file="./supp_fig1.pdf", width=15, height=18)
ggarrange(upper, c, 
          labels=c("A", "C"),
          ncol=1, nrow=2)
dev.off()

